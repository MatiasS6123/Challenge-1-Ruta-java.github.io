/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package convertidormonedas;

import javax.swing.JOptionPane;

/**
 *
 * @author Lenovo
 */
public class CovertidorMoneda extends javax.swing.JFrame {

    /**
     * Creates new form CovertidorMoneda
     */
    public CovertidorMoneda() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JTextFieldCantidadDinero = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxTipoMoneda = new javax.swing.JComboBox<>();
        jTextFieldDineroAResivir = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonCalcular = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Convertidor de monedas");

        JTextFieldCantidadDinero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextFieldCantidadDineroActionPerformed(evt);
            }
        });
        JTextFieldCantidadDinero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTextFieldCantidadDineroKeyTyped(evt);
            }
        });

        jLabel2.setText("Ingrese cantidad  a convertir");

        jComboBoxTipoMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pesos a dolar", "pesos a euros", "pesos a libras", "pesos a yen", "pesos a won coreano", "dolares a pesos", "euros a pesos", "libra esterlina a peso", "yen a peso", "won coreano a peso" }));
        jComboBoxTipoMoneda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoMonedaActionPerformed(evt);
            }
        });

        jTextFieldDineroAResivir.setEditable(false);
        jTextFieldDineroAResivir.setEnabled(true);
        jTextFieldDineroAResivir.setFocusable(false);
        jTextFieldDineroAResivir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDineroAResivirActionPerformed(evt);
            }
        });

        jLabel3.setText("Cantidad a recibir:");

        jButtonCalcular.setText("Calcular");
        jButtonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalcularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JTextFieldCantidadDinero, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDineroAResivir, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxTipoMoneda, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 29, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTextFieldCantidadDinero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTipoMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextFieldDineroAResivir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonCalcular, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JTextFieldCantidadDineroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextFieldCantidadDineroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextFieldCantidadDineroActionPerformed

    private void jTextFieldDineroAResivirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDineroAResivirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDineroAResivirActionPerformed

    void desabilitar(){
        jTextFieldDineroAResivir.setEnabled(false);
        jTextFieldDineroAResivir.setEditable(false);
    }

    private void jButtonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalcularActionPerformed
        // TODO add your handling code here:
        int tipo = jComboBoxTipoMoneda.getSelectedIndex();
        double cantidad;
        double valorMoneda;
        double dineroRecibir;
        
        desabilitar();

        switch (tipo) {
            case 0: {
                valorMoneda = 850;

                cantidad = Math.round(Double.parseDouble(JTextFieldCantidadDinero.getText()) / valorMoneda);

                dineroRecibir = cantidad;
                jTextFieldDineroAResivir.setText(String.valueOf(dineroRecibir)+" Dolares");
                
                int continuar=JOptionPane.showConfirmDialog(null,"Desea Continuar", "Seleccione una opcion",JOptionPane.YES_NO_CANCEL_OPTION);
                
                if(continuar==JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                    
                }
                else if(continuar==JOptionPane.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                }

                break;
            }
            case 1: {
                valorMoneda = 900;

                cantidad = Math.ceil(Double.parseDouble(JTextFieldCantidadDinero.getText()) / valorMoneda);

                dineroRecibir = cantidad;
                jTextFieldDineroAResivir.setText(String.valueOf(dineroRecibir)+" Euros");
                
                int continuar=JOptionPane.showConfirmDialog(null,"Desea Continuar", "Seleccione una opcion",JOptionPane.YES_NO_CANCEL_OPTION);
                
                if(continuar==JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                    
                }
                else if(continuar==JOptionPane.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                }
                break;


            }
            case 2: {
                valorMoneda = 1.070;

                cantidad = Math.ceil(Double.parseDouble(JTextFieldCantidadDinero.getText()) / valorMoneda);

                dineroRecibir = cantidad;
                jTextFieldDineroAResivir.setText(String.valueOf(dineroRecibir)+" Libras Esterlinas");

                int continuar=JOptionPane.showConfirmDialog(null,"Desea Continuar", "Seleccione una opcion",JOptionPane.YES_NO_CANCEL_OPTION);
                
                if(continuar==JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                    
                }
                else if(continuar==JOptionPane.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                }
            }
            case 3: {
                valorMoneda = 6.42;

                cantidad = Math.ceil(Double.parseDouble(JTextFieldCantidadDinero.getText()) / valorMoneda);

                dineroRecibir = cantidad;
                jTextFieldDineroAResivir.setText(String.valueOf(dineroRecibir)+" Yenes");
                int continuar=JOptionPane.showConfirmDialog(null,"Desea Continuar", "Seleccione una opcion",JOptionPane.YES_NO_CANCEL_OPTION);
                
                if(continuar==JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                    
                }
                else if(continuar==JOptionPane.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                }
                break;

            }
            case 4: {
                valorMoneda = 0.66 ;

                cantidad = Math.ceil(Double.parseDouble(JTextFieldCantidadDinero.getText()) / valorMoneda);

                dineroRecibir = cantidad;
                jTextFieldDineroAResivir.setText(String.valueOf(dineroRecibir)+" Wones Coreanos");
                
                int continuar=JOptionPane.showConfirmDialog(null,"Desea Continuar", "Seleccione una opcion",JOptionPane.YES_NO_CANCEL_OPTION);
                
                if(continuar==JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                    
                }
                else if(continuar==JOptionPane.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                }
                break;

            }
            case 5: {
                valorMoneda = 850;

                cantidad = Math.ceil(Double.parseDouble(JTextFieldCantidadDinero.getText()) * valorMoneda);

                dineroRecibir = cantidad;
                jTextFieldDineroAResivir.setText(String.valueOf(dineroRecibir)+" Pesos Chilenos");

                int continuar=JOptionPane.showConfirmDialog(null,"Desea Continuar", "Seleccione una opcion",JOptionPane.YES_NO_CANCEL_OPTION);
                
                if(continuar==JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                    
                }
                else if(continuar==JOptionPane.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                }
                break;

            }
            case 6: {
                valorMoneda = 900;

                cantidad = Math.ceil(Double.parseDouble(JTextFieldCantidadDinero.getText()) * valorMoneda);

                dineroRecibir = cantidad;
                jTextFieldDineroAResivir.setText(String.valueOf(dineroRecibir)+" Pesos Chilenos");
                int continuar=JOptionPane.showConfirmDialog(null,"Desea Continuar", "Seleccione una opcion",JOptionPane.YES_NO_CANCEL_OPTION);
                if(continuar==JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                    
                }
                else if(continuar==JOptionPane.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                }
                
                break;

            }
            case 7: {
                valorMoneda = 1070;

                cantidad = Math.ceil(Double.parseDouble(JTextFieldCantidadDinero.getText()) * valorMoneda);

                dineroRecibir = cantidad;
                jTextFieldDineroAResivir.setText(String.valueOf(dineroRecibir)+" Pesos Chilenos");
                
                int continuar=JOptionPane.showConfirmDialog(null,"Desea Continuar", "Seleccione una opcion",JOptionPane.YES_NO_CANCEL_OPTION);
                
                if(continuar==JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                    
                }
                else if(continuar==JOptionPane.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                }
                break;

            }
            case 8: {
                valorMoneda = 6.42;

                cantidad = Math.ceil(Double.parseDouble(JTextFieldCantidadDinero.getText()) * valorMoneda);

                dineroRecibir = cantidad;
                jTextFieldDineroAResivir.setText(String.valueOf(dineroRecibir)+" Pesos Chilenos");
                
                int continuar=JOptionPane.showConfirmDialog(null,"Desea Continuar", "Seleccione una opcion",JOptionPane.YES_NO_CANCEL_OPTION);
                
                if(continuar==JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                    
                }
                
                else if(continuar==JOptionPane.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                }
                break;

            }
            case 9: {
                valorMoneda = 0.66;

                cantidad = Math.ceil(Double.parseDouble(JTextFieldCantidadDinero.getText()) * valorMoneda);

                dineroRecibir = cantidad;
                jTextFieldDineroAResivir.setText(String.valueOf(dineroRecibir)+" Pesos Chilenos");
                int continuar=JOptionPane.showConfirmDialog(null,"Desea Continuar", "Seleccione una opcion",JOptionPane.YES_NO_CANCEL_OPTION);
                
                if(continuar==JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                    System.exit(0);
                    
                }
                else if(continuar==JOptionPane.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null, "programa Terminado");
                }
                break;

            }

        }
    


    }//GEN-LAST:event_jButtonCalcularActionPerformed

    private void JTextFieldCantidadDineroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTextFieldCantidadDineroKeyTyped
        // TODO add your handling code here:
        char c =evt.getKeyChar();
        
        if(c<'0'||c>'9'){
            JOptionPane.showMessageDialog(null, "Solo se permiten numeros");
            evt.consume();
        }
    }//GEN-LAST:event_JTextFieldCantidadDineroKeyTyped

    private void jComboBoxTipoMonedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoMonedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTipoMonedaActionPerformed

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CovertidorMoneda.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CovertidorMoneda.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CovertidorMoneda.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CovertidorMoneda.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CovertidorMoneda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTextFieldCantidadDinero;
    private javax.swing.JButton jButtonCalcular;
    private javax.swing.JComboBox<String> jComboBoxTipoMoneda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldDineroAResivir;
    // End of variables declaration//GEN-END:variables
}
